name: main

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: [
          "3.7",
          "3.8",
        ]
    container: continuumio/miniconda3
    steps:
    - uses: actions/checkout@v2
    - name: Install java
      run: mkdir /usr/share/man/man1 && apt-get update && apt-get install -y default-jre
    - name: Install conda-build
      run: conda install conda-build
    - name: Create environment
      run: conda create --prefix ./venv python=${{ matrix.pyversion }} -c conda-forge -c chromaticisobar --file requirements.txt --file test-requirements.txt
    - name: Log python version
      run: conda run --prefix ./venv python --version
    - name: Add featgraph
      run: conda develop . --prefix ./venv
    - name: Test
      run: conda run --prefix ./venv python -m unittest -v

  coverage:
    runs-on: ubuntu-latest
    container: continuumio/miniconda3
    steps:
    - uses: actions/checkout@v2
    - name: Install java
      run: mkdir /usr/share/man/man1 && apt-get update && apt-get install -y default-jre
    - name: Install conda-build
      run: conda install conda-build
    - name: Create environment
      run: conda create --prefix ./venv -c conda-forge -c chromaticisobar --file requirements.txt --file test-requirements.txt
    - name: Log python version
      run: conda run --prefix ./venv python --version
    - name: Run coverage
      run: conda run --prefix ./venv python -m coverage run
    - name: Collect coverage from multithreading
      run: conda run --prefix ./venv python -m coverage combine
    - name: Make coverage JSON
      run: conda run --prefix ./venv python -m coverage json
    - name: Upload coverage JSON
      uses: actions/upload-artifact@v1
      with:
        name: coverage_report
        path: coverage.json
    - name: Download badge
      run: wget $(conda run --prefix ./venv python -m chromatictools.badges coverage) -O badge.svg
    - name: Upload svg
      uses: actions/upload-artifact@v1
      with:
        name: coverage_badge
        path: badge.svg
    - name: Deploy badge
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_TOKEN }}
        gist_id: 18a4dd9093b1c271ce6f9d117cc5ba40
        gist_file_name: featgraph-coverage-badge.svg
        file_path: badge.svg

  lint:
    runs-on: ubuntu-latest
    container: continuumio/miniconda3
    steps:
    - uses: actions/checkout@v2
    - name: Install java
      run: mkdir /usr/share/man/man1 && apt-get update && apt-get install -y default-jre
    - name: Create environment
      run: conda create --prefix ./venv -c conda-forge -c chromaticisobar --file requirements.txt --file style-requirements.txt
    - name: Log python version
      run: conda run --prefix ./venv python --version
    - name: Run pylint
      run: conda run --prefix ./venv pylint featgraph tests -r y --exit-zero --jobs 1 --persistent=n --rcfile=pylintrc > pylint.txt
    - name: Upload lint report
      uses: actions/upload-artifact@v1
      with:
        name: lint_report
        path: pylint.txt
    - name: Download badge
      run: wget $(conda run --prefix ./venv python -m chromatictools.badges pylint) -O badge.svg
    - name: Upload svg
      uses: actions/upload-artifact@v1
      with:
        name: pylint_badge
        path: badge.svg
    - name: Deploy badge
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_TOKEN }}
        gist_id: 18a4dd9093b1c271ce6f9d117cc5ba40
        gist_file_name: featgraph-pylint-badge.svg
        file_path: badge.svg

  sphinx:
    runs-on: ubuntu-latest
    container: continuumio/miniconda3
    steps:
    - uses: actions/checkout@v2
    - name: Install java and make
      run: mkdir /usr/share/man/man1 && apt-get update && apt-get install -y default-jre build-essential
    - name: Create environment
      run: conda create --prefix ./venv -c conda-forge -c chromaticisobar --file requirements.txt --file docs-requirements.txt
    - name: Log python version
      run: conda run --prefix ./venv python --version
    - name: Build HTML
      run: conda run --prefix ../venv make html
      working-directory: docs
    - name: Upload HTML
      uses: actions/upload-artifact@v1
      with:
        name: pages
        path: docs/build/html

  pages-deploy:
    runs-on: ubuntu-latest
    needs: [sphinx, test]
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: pages
          path: pages
      - name: No Jekyll in pages
        run: touch pages/.nojekyll
      - name: Deploy pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: pages
          single-commit: true
